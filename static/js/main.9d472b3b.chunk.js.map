{"version":3,"sources":["Count.js","index.js"],"names":["Count","state","count","step","setCount","val","alert","setState","mod","number","total","setStep","className","this","type","placeholder","readOnly","value","onClick","Component","render","document","getElementById"],"mappings":"4LAiGeA,E,4MA9FbC,MAAQ,CACNC,MAAO,EACPC,KAAM,I,EAERC,SAAW,SAACC,GACV,GAAY,MAARA,EAKF,OAJAC,MAAM,qBACN,EAAKC,SAAS,CACZL,MAAO,IAIa,KAApB,EAAKD,MAAME,MAIS,MAApB,EAAKF,MAAME,MACb,EAAKD,MAAM,IAAKG,GAEM,MAApB,EAAKJ,MAAME,MACb,EAAKD,MAAM,IAAKG,GAEM,MAApB,EAAKJ,MAAME,MACb,EAAKD,MAAM,IAAKG,GAEM,MAApB,EAAKJ,MAAME,MACb,EAAKD,MAAM,IAAKG,GAElB,EAAKE,SAAS,CACZJ,KAAM,MAhBNG,MAAM,2B,EAmBVJ,MAAQ,SAACM,EAAKH,GACZ,IAAII,EAAS,EAAKR,MAAMC,MACpBQ,EAAQL,EACZ,OAAQG,GACN,IAAK,IACH,EAAKD,SAAS,CACZL,MAAOO,EAASC,IAElB,MACF,IAAK,IACH,EAAKH,SAAS,CACZL,MAAOO,EAASC,IAElB,MACF,IAAK,IACH,EAAKH,SAAS,CACZL,MAAOO,EAASC,IAElB,MACF,IAAK,IACH,EAAKH,SAAS,CACZL,MAAOO,EAASC,M,EAOxBC,QAAU,SAACN,GACT,EAAKE,SAAS,CACZJ,KAAME,K,4CAGV,WAAU,IAAD,OACP,OACE,sBAAKO,UAAU,QAAf,UACE,4BAAIC,KAAKZ,MAAME,OACf,uBAAOW,KAAK,OAAOC,YAAY,iCAAQC,UAAQ,EAACC,MAAOJ,KAAKZ,MAAMC,QAClE,sBAAKU,UAAU,WAAf,UACE,wBAAQM,QAAS,kBAAM,EAAKP,QAAQ,MAApC,eACA,wBAAQO,QAAS,kBAAM,EAAKP,QAAQ,MAApC,eACA,wBAAQO,QAAS,kBAAM,EAAKP,QAAQ,MAApC,eACA,wBAAQO,QAAS,kBAAM,EAAKP,QAAQ,MAApC,kBAEF,sBAAKC,UAAU,aAAf,UACE,wBAAQM,QAAS,kBAAM,EAAKd,SAAS,IAArC,eACA,wBAAQc,QAAS,kBAAM,EAAKd,SAAS,IAArC,eACA,wBAAQc,QAAS,kBAAM,EAAKd,SAAS,IAArC,eACA,wBAAQc,QAAS,kBAAM,EAAKd,SAAS,IAArC,eACA,wBAAQc,QAAS,kBAAM,EAAKd,SAAS,IAArC,eACA,wBAAQc,QAAS,kBAAM,EAAKd,SAAS,IAArC,eACA,wBAAQc,QAAS,kBAAM,EAAKd,SAAS,IAArC,eACA,wBAAQc,QAAS,kBAAM,EAAKd,SAAS,IAArC,eACA,wBAAQc,QAAS,kBAAM,EAAKd,SAAS,IAArC,eACA,wBAAQc,QAAS,kBAAM,EAAKd,SAAS,IAAIQ,UAAU,QAAnD,eACA,wBAAQM,QAAS,kBAAM,EAAKd,SAAS,MAArC,yB,GAxFUe,aCEpBC,iBAAO,cAAC,EAAD,IAAiBC,SAASC,eAAe,W","file":"static/js/main.9d472b3b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Count.css';\r\nclass Count extends Component {\r\n  state = {\r\n    count: 0,\r\n    step: ''\r\n  }\r\n  setCount = (val) => {\r\n    if (val === 'C') {\r\n      alert('歸零')\r\n      this.setState({\r\n        count: 0\r\n      })\r\n      return\r\n    }\r\n    if (this.state.step === \"\") {\r\n      alert('請選擇+-*/')\r\n      return\r\n    }\r\n    if (this.state.step === \"+\") {\r\n      this.count('+', val);\r\n    }\r\n    if (this.state.step === \"-\") {\r\n      this.count('-', val);\r\n    }\r\n    if (this.state.step === \"x\") {\r\n      this.count('x', val);\r\n    }\r\n    if (this.state.step === \"/\") {\r\n      this.count('/', val);\r\n    }\r\n    this.setState({\r\n      step: ''\r\n    })\r\n  }\r\n  count = (mod, val) => {\r\n    let number = this.state.count\r\n    let total = val\r\n    switch (mod) {\r\n      case '+':\r\n        this.setState({\r\n          count: number + total\r\n        })\r\n        break;\r\n      case '-':\r\n        this.setState({\r\n          count: number - total\r\n        })\r\n        break;\r\n      case 'x':\r\n        this.setState({\r\n          count: number * total\r\n        })\r\n        break;\r\n      case '/':\r\n        this.setState({\r\n          count: number / total\r\n        })\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  setStep = (val) => {\r\n    this.setState({\r\n      step: val\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"count\">\r\n        <p>{this.state.step}</p>\r\n        <input type=\"text\" placeholder=\"請輸入數字\" readOnly value={this.state.count} />\r\n        <div className=\"btn_func\">\r\n          <button onClick={() => this.setStep('+')}>+</button>\r\n          <button onClick={() => this.setStep('-')}>-</button>\r\n          <button onClick={() => this.setStep('x')}>x</button>\r\n          <button onClick={() => this.setStep('/')}>/</button>\r\n        </div>\r\n        <div className=\"btn_number\">\r\n          <button onClick={() => this.setCount(7)}>7</button>\r\n          <button onClick={() => this.setCount(8)}>8</button>\r\n          <button onClick={() => this.setCount(9)}>9</button>\r\n          <button onClick={() => this.setCount(4)}>4</button>\r\n          <button onClick={() => this.setCount(5)}>5</button>\r\n          <button onClick={() => this.setCount(6)}>6</button>\r\n          <button onClick={() => this.setCount(1)}>1</button>\r\n          <button onClick={() => this.setCount(2)}>2</button>\r\n          <button onClick={() => this.setCount(3)}>3</button>\r\n          <button onClick={() => this.setCount(0)} className=\"reset\">0</button>\r\n          <button onClick={() => this.setCount('C')}>C</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Count;","import React from \"react\"\r\nimport { render } from \"react-dom\"\r\nimport Count from \"./Count.js\"\r\n\r\nrender(<Count></Count>, document.getElementById('root'))"],"sourceRoot":""}